services:
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    develop:
      watch:
        - action: sync
          path: ./api-gateway
          target: /code
        - action: rebuild
          path: ./api-gateway/requirements.txt
    stdin_open: true
    tty: true

  auth-service:
    build:
      context: ./auth
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=news_app_db
      - JWT_SECRET=news_app_secret
      - JWT_ALGORITHM=HS256
    develop:
      watch:
        - action: sync
          path: ./auth
          target: /code
        - action: rebuild
          path: ./auth/requirements.txt
    stdin_open: true
    tty: true

  postgres:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres123
    volumes:
      - ./db/scripts:/docker-entrypoint-initdb.d
    stdin_open: true
    tty: true

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    develop:
      watch:
        - action: sync
          path: ./frontend/web-app
          target: /code
        - action: rebuild
          path: ./frontend/web-app/package.json
    stdin_open: true
    tty: true

  user-service:
    build:
      context: ./user
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=news_app_db
    develop:
      watch:
        - action: sync
          path: ./user
          target: /code
        - action: rebuild
          path: ./user/requirements.txt
    stdin_open: true
    tty: true

